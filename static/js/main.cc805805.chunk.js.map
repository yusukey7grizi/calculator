{"version":3,"sources":["Calculator.jsx","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","theme","wrapper","marginTop","margin","width","textAlign","height","backgroundColor","display","flexDirection","borderRadius","result","fontFamily","padding","color","fontSize","buttonContainer","ClearEqual","letterSpacing","numberButton","calculation","Calculator","classes","useState","Result","setResult","ClearHandler","BackspaceHandler","slice","length","onClickHandler","e","currentTarget","name","concat","value","eval","toString","className","rowDivider","onClick","variant","href","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cc805805.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { Grid, Typography } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  wrapper: {\r\n    marginTop: \"7%\",\r\n    margin: \"auto\",\r\n    width: \"375px\",\r\n    textAlign: \"center\",\r\n    height: \"450px\",\r\n    backgroundColor: \"#AFEEEE\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    borderRadius: \"5px\",\r\n  },\r\n  result: {\r\n    fontFamily: \"'Righteous', cursive\",\r\n    backgroundColor: \"white\",\r\n    borderRadius: \"5px\",\r\n    padding: \"5px\",\r\n    width: \"74%\",\r\n    textAlign: \"right\",\r\n    margin: \"auto\",\r\n    color: \"black\",\r\n    fontSize: \"30px\",\r\n  },\r\n  buttonContainer: { width: \"90%\", margin: \"auto\", marginTop: \"-10px\" },\r\n\r\n  ClearEqual: {\r\n    letterSpacing: \"2px\",\r\n    margin: \"5px\",\r\n    width: \"138px\",\r\n    height: \"50px\",\r\n  },\r\n  numberButton: {\r\n    margin: \"5px\",\r\n    width: \"50px\",\r\n    height: \"50px\",\r\n  },\r\n  calculation: {\r\n    height: \"50px\",\r\n    margin: \"5px\",\r\n    width: \"50px\",\r\n  },\r\n}));\r\nconst Calculator = () => {\r\n  const classes = useStyles();\r\n  const [Result, setResult] = useState(\"\");\r\n  const ClearHandler = () => {\r\n    setResult(\"\");\r\n  };\r\n  const BackspaceHandler = () => {\r\n    setResult(Result.slice(0, Result.length - 1));\r\n  };\r\n  const onClickHandler = (e) => {\r\n    if ((Result === \"Error\") | (Result === \"0\")) {\r\n      setResult(e.currentTarget.name);\r\n    } else if (Result.length > 14) {\r\n      return false;\r\n    } else {\r\n      setResult(Result.concat(e.currentTarget.name));\r\n    }\r\n  };\r\n  const Calculator = () => {\r\n    try {\r\n      const value = eval(Result).toString();\r\n      setResult(value);\r\n    } catch {\r\n      setResult(\"Error\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Grid className={classes.wrapper}>\r\n      {\" \"}\r\n      <Typography className={classes.result}>\r\n        {Result ? Result : \"0\"}\r\n      </Typography>\r\n      <Grid className={classes.buttonContainer}>\r\n        {\" \"}\r\n        <Grid className={classes.rowDivider}>\r\n          {\" \"}\r\n          <Button\r\n            className={classes.ClearEqual}\r\n            onClick={ClearHandler}\r\n            variant=\"outlined\"\r\n            color=\"primary\"\r\n            href=\"#outlined-buttons\"\r\n          >\r\n            Clear\r\n          </Button>\r\n          <Button\r\n            className={classes.calculation}\r\n            onClick={BackspaceHandler}\r\n            variant=\"outlined\"\r\n            color=\"primary\"\r\n            href=\"#outlined-buttons\"\r\n          >\r\n            C\r\n          </Button>\r\n          <Button\r\n            className={classes.calculation}\r\n            name=\"/\"\r\n            onClick={onClickHandler}\r\n            variant=\"outlined\"\r\n            color=\"primary\"\r\n            href=\"#outlined-buttons\"\r\n          >\r\n            รท\r\n          </Button>\r\n        </Grid>{\" \"}\r\n        <Grid className={classes.rowDivider}>\r\n          {\" \"}\r\n          <Button\r\n            className={classes.numberButton}\r\n            name=\"7\"\r\n            onClick={onClickHandler}\r\n            variant=\"outlined\"\r\n            color=\"primary\"\r\n            href=\"#outlined-buttons\"\r\n          >\r\n            7\r\n          </Button>\r\n          <Button\r\n            className={classes.numberButton}\r\n            name=\"8\"\r\n            onClick={onClickHandler}\r\n            variant=\"outlined\"\r\n            color=\"primary\"\r\n            href=\"#outlined-buttons\"\r\n          >\r\n            8\r\n          </Button>\r\n          <Button\r\n            className={classes.numberButton}\r\n            name=\"9\"\r\n            onClick={onClickHandler}\r\n            variant=\"outlined\"\r\n            color=\"primary\"\r\n            href=\"#outlined-buttons\"\r\n          >\r\n            9\r\n          </Button>\r\n          <Button\r\n            className={classes.calculation}\r\n            name=\"*\"\r\n            onClick={onClickHandler}\r\n            variant=\"outlined\"\r\n            color=\"primary\"\r\n            href=\"#outlined-buttons\"\r\n          >\r\n            ร\r\n          </Button>\r\n        </Grid>{\" \"}\r\n        <Grid className={classes.rowDivider}>\r\n          {\" \"}\r\n          <Button\r\n            className={classes.numberButton}\r\n            name=\"4\"\r\n            onClick={onClickHandler}\r\n            variant=\"outlined\"\r\n            color=\"primary\"\r\n            href=\"#outlined-buttons\"\r\n          >\r\n            4\r\n          </Button>\r\n          <Button\r\n            className={classes.numberButton}\r\n            name=\"5\"\r\n            onClick={onClickHandler}\r\n            variant=\"outlined\"\r\n            color=\"primary\"\r\n            href=\"#outlined-buttons\"\r\n          >\r\n            5\r\n          </Button>\r\n          <Button\r\n            className={classes.numberButton}\r\n            name=\"6\"\r\n            onClick={onClickHandler}\r\n            variant=\"outlined\"\r\n            color=\"primary\"\r\n            href=\"#outlined-buttons\"\r\n          >\r\n            6\r\n          </Button>\r\n          <Button\r\n            className={classes.calculation}\r\n            name=\"-\"\r\n            onClick={onClickHandler}\r\n            variant=\"outlined\"\r\n            color=\"primary\"\r\n            href=\"#outlined-buttons\"\r\n          >\r\n            -\r\n          </Button>\r\n        </Grid>{\" \"}\r\n        <Grid className={classes.rowDivider}>\r\n          {\" \"}\r\n          <Button\r\n            className={classes.numberButton}\r\n            name=\"3\"\r\n            onClick={onClickHandler}\r\n            variant=\"outlined\"\r\n            color=\"primary\"\r\n            href=\"#outlined-buttons\"\r\n          >\r\n            3\r\n          </Button>\r\n          <Button\r\n            className={classes.numberButton}\r\n            name=\"2\"\r\n            onClick={onClickHandler}\r\n            variant=\"outlined\"\r\n            color=\"primary\"\r\n            href=\"#outlined-buttons\"\r\n          >\r\n            2\r\n          </Button>\r\n          <Button\r\n            className={classes.numberButton}\r\n            name=\"1\"\r\n            onClick={onClickHandler}\r\n            variant=\"outlined\"\r\n            color=\"primary\"\r\n            href=\"#outlined-buttons\"\r\n          >\r\n            1\r\n          </Button>\r\n          <Button\r\n            className={classes.calculation}\r\n            name=\"+\"\r\n            onClick={onClickHandler}\r\n            variant=\"outlined\"\r\n            color=\"primary\"\r\n            href=\"#outlined-buttons\"\r\n          >\r\n            +\r\n          </Button>\r\n        </Grid>{\" \"}\r\n        <Grid className={classes.rowDivider}>\r\n          {\" \"}\r\n          <Button\r\n            className={classes.numberButton}\r\n            onClick={onClickHandler}\r\n            variant=\"outlined\"\r\n            color=\"primary\"\r\n            href=\"#outlined-buttons\"\r\n            name=\"0\"\r\n          >\r\n            0\r\n          </Button>\r\n          <Button\r\n            className={classes.numberButton}\r\n            name=\".\"\r\n            onClick={onClickHandler}\r\n            variant=\"outlined\"\r\n            color=\"primary\"\r\n            href=\"#outlined-buttons\"\r\n          >\r\n            .\r\n          </Button>\r\n          <Button\r\n            className={classes.ClearEqual}\r\n            onClick={Calculator}\r\n            variant=\"outlined\"\r\n            color=\"primary\"\r\n            href=\"#outlined-buttons\"\r\n          >\r\n            =\r\n          </Button>\r\n        </Grid>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default Calculator;\r\n","import \"./App.css\";\nimport Calculator from \"./Calculator\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Calculator />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}